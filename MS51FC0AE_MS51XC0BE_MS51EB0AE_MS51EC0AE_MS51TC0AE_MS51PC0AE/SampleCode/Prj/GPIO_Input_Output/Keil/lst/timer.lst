C51 COMPILER V9.60.7.0   TIMER                                                             04/09/2025 15:05:59 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE TIMER
OBJECT MODULE PLACED IN .\Output\timer.obj
COMPILER INVOKED BY: C:\Users\Admin\AppData\Local\Keil_v5\C51\BIN\C51.EXE ..\..\..\..\Library\StdDriver\src\timer.c LARG
                    -E OMF2 OPTIMIZE(7,SPEED) BROWSE INCDIR(..\..\..\..\Library\Device\Include;..\..\..\..\Library\StdDriver\inc) DEBUG PRINT
                    -(.\lst\timer.lst) TABS(2) OBJECT(.\Output\timer.obj)

line level    source

   1          /*--------------------------------------------------------------------------------------------------------
             --*/
   2          /*                                                                                                        
             - */
   3          /* SPDX-License-Identifier: Apache-2.0                                                                    
             - */
   4          /* Copyright(c) 2020 Nuvoton Technology Corp. All rights reserved.                                        
             - */
   5          /*                                                                                                        
             - */
   6          /*--------------------------------------------------------------------------------------------------------
             --*/
   7          #include "ms51_32k.h"
   8          
   9          unsigned long data TIMER0CT,TIMER1CT,TIMER2CT,TIMER3CT;
  10          unsigned char data TH0TMP,TL0TMP,TH1TMP,TL1TMP;
  11          
  12          /**
  13            * @brief Timer0 delay interrupt initial setting and timer 0 interrupt vector 
  14            * @param[in] u32SYSCLK define Fsys clock value. for example 8, use the real Fsys value.
  15            *                       - \ref 16 / 24 (use HIRC)
  16            *                       - \ref 8  (use MIRC)
  17            * @param[in] u6DLYUnit define delay time base is us. the minimum delay value not less than 100us, the ma
             -xima value base on u32SYSCLK
  18            *                       - \ref for 24MHz (use HIRC) value range is 100 ~ 32768.
  19            *                       - \ref for 8MHz  (use MIRC) value range is 100 ~ 65536.
  20            * @return  None 
  21            * @note    This initial subroutine must with following Timer 0 interrupt vector.
  22            * @exmaple :Timer0_AutoReload_Interrupt_Initial(24,450);
  23          */
  24          #if 0   /* Interrup Vector demo */
              void Timer0_ISR (void) interrupt 1        // Vector @  0x0B
              {
              PUSH_SFRS;
                    SFRS = 0;
              /* following setting for reload Timer 0 counter */
                    TH0 = TH0TMP;
                    TL0 = TL0TMP;
              /* following clear flag for next interrupt */
                    clr_TCON_TF0;
                
              POP_SFRS;
              }
              #endif 0
  38          
  39          void Timer0_AutoReload_Interrupt_Initial(unsigned char u8SYSCLK, unsigned long u32DLYUnit)
  40          {
  41   1          TIMER0_FSYS_DIV12;                                          /* T0M=0, Timer0 Clock = Fsys/12   */
  42   1          ENABLE_TIMER0_MODE1;                                        /* Timer0 as 16-bit mode           */
  43   1          TIMER0CT = 65535ul-(u8SYSCLK*u32DLYUnit/12ul);
  44   1          TH0TMP = HIBYTE(TIMER0CT);
  45   1          TL0TMP = LOBYTE(TIMER0CT);
  46   1          TH0 = TH0TMP;
C51 COMPILER V9.60.7.0   TIMER                                                             04/09/2025 15:05:59 PAGE 2   

  47   1          TL0 = TL0TMP;
  48   1          clr_TCON_TF0;
  49   1          set_TCON_TR0;                                    //Start Timer0
  50   1          ENABLE_TIMER0_INTERRUPT;
  51   1      }
  52          
  53          void  Timer0_AutoReload_Interrupt_CounterClear(void)
  54          {
  55   1          TH0 = TH0TMP;
  56   1          TL0 = TL0TMP;
  57   1          clr_TCON_TF0;
  58   1          set_TCON_TR0;
  59   1      }
  60          /**
  61            * @brief Timer1 delay interrupt initial setting and timer 1 interrupt vector  
  62            * @param[in] u32SYSCLK define Fsys clock value. for example 8, use the real Fsys value.
  63            *                       - \ref 24 (use HIRC)
  64            *                       - \ref 8  (use MIRC)
  65            * @param[in] u6DLYUnit define delay time base is us. the minimum delay value not less than 100us, the ma
             -xima value base on u32SYSCLK
  66            *                       - \ref for 7.3728MHz (use HIRC) value range is 100 ~ 32768.
  67            *                       - \ref for 8MHz  (use MIRC) value range is 100 ~ 65536.
  68            * @return  None
  69            * @note    This initial subroutine must with following Timer 1 interrupt vector.
  70            * @exmaple :  Timer0_AutoReload_Interrupt_Initial(8,6400);
  71          */
  72          #if 0
              void Timer1_ISR (void) interrupt 3        // Vector @  0x1B
              { 
                  PUSH_SFRS;
              /* following setting for reload Timer 0 counter, this is must for next time*/
                    TH1 = TH1TMP;
                    TL1 = TL1TMP;
              /* following clear flag is necessary for next time */
                    clr_TCON_TF1;
                  POP_SFRS;
              }
              #endif
  84          
  85          void Timer1_AutoReload_Interrupt_Initial(unsigned char u8SYSCLK, unsigned long u32DLYUnit)
  86          {
  87   1          TIMER1_FSYS_DIV12;                                           /* T1M=0, Timer1 Clock = Fsys/12   */
  88   1          ENABLE_TIMER1_MODE1;                                         /* Timer 1 as 16-bit mode           */
  89   1          TIMER1CT = 65535ul-(u8SYSCLK*u32DLYUnit/12ul);
  90   1          TH1TMP = HIBYTE(TIMER1CT);
  91   1          TL1TMP = LOBYTE(TIMER1CT);
  92   1          TH1 = TH1TMP;
  93   1          TL1 = TL1TMP;
  94   1          clr_TCON_TF1;
  95   1          set_TCON_TR1;
  96   1          ENABLE_TIMER1_INTERRUPT;
  97   1      }
  98          
  99          
 100          
 101          /**
 102            * @brief Timer2 delay interrupt initial setting and timer 1 interrupt vector  
 103            * @param[in] u32SYSCLK define Fsys clock value. for example 8, use the real Fsys value.
 104            *                       - \ref 24 (use HIRC)
 105            *                       - \ref 8  (use MIRC)
 106            * @param[in] u6DLYUnit define delay time base is us. the minimum delay value not less than 100us, the ma
             -xima value base on u32SYSCLK
C51 COMPILER V9.60.7.0   TIMER                                                             04/09/2025 15:05:59 PAGE 3   

 107            *                       - \ref for 7.3728MHz (use HIRC) value range is 100 ~ 699050.  means delay time f
             -rom about 100us ~ 700ms
 108            *                       - \ref for 8MHz  (use MIRC) value range is 100 ~ 2097120.  means delay time from
             - about 100us ~ 2.1s
 109            * @return  None
 110            * @note    Timer 2 divider fixed with 256. suggest delay range is from 10ms ~ 2s
 111            * @exmaple :  fsys = 8MHz, delay 6.4ms  : Timer2_AutoReload_Interrupt_Initial(8,6400);
 112          */
 113          #if 0    
              void Timer2_ISR (void) interrupt 5        // Vector @  0x2B
              {
              PUSH_SFRS;
                  clr_T2CON_TF2;
              POP_SFRS;
              }
              #endif
 121          
 122          void Timer2_AutoReload_Interrupt_Initial(unsigned char u8SYSCLK, unsigned long u32DLYUnit)
 123          {
 124   1          TIMER2_Auto_Reload_Delay_Mode;
 125   1          SFRS = 0;T2MOD&=0x8F;T2MOD|=0x60;                          /* fix divider 256 */
 126   1          TIMER2CT = 65535ul-(u8SYSCLK*u32DLYUnit/256ul);
 127   1          TH2 = HIBYTE(TIMER2CT);
 128   1          TL2 = LOBYTE(TIMER2CT);
 129   1          SFRS=1;
 130   1          RCMP2H = HIBYTE(TIMER2CT);
 131   1          RCMP2L = LOBYTE(TIMER2CT);
 132   1          clr_T2CON_TF2;
 133   1          set_T2CON_TR2;                                             /* Start Timer2  */
 134   1          ENABLE_TIMER2_INTERRUPT;
 135   1      }
 136          
 137          /**
 138            * @brief Timer3 delay interrupt initial setting and timer 1 interrupt vector  
 139            * @param[in] u32SYSCLK define Fsys clock value. for example 8, use the real Fsys value.
 140            *                       - \ref 24 (use HIRC)
 141            *                       - \ref 8  (use MIRC)
 142            * @param[in] u6DLYUnit define delay time base is us. the minimum delay value not less than 100us, the ma
             -xima value base on u32SYSCLK
 143            *                       - \ref for 24MHz (use HIRC) value range is 100 ~ 349525.  means delay time from 
             -about 100us ~ 350ms
 144            * @return  None
 145            * @note    Timer 3 divider fixed with 128. Delay time from about 100us ~ 350ms
 146            * @exmaple :  fsys = 8MHz, delay 6.4ms  : Timer3_AutoReload_Interrupt_Initial(8,DIV128,6400);
 147          */
 148          #if 0
              void Timer3_ISR (void) interrupt 16        // Vector @  0x83
              {
              PUSH_SFRS;
                  clr_T3CON_TF3;
              POP_SFRS;
              }
              #endif 
 156          
 157          void Timer3_AutoReload_Interrupt_Initial(unsigned char u8SYSCLK, unsigned long u32DLYUnit)
 158          {
 159   1          SFRS = 0;
 160   1          T3CON&=0xF8;
 161   1          T3CON|=0x07;     /*  Timer 3 divider fixed with 128.*/
 162   1          TIMER2CT = 65535ul-(u8SYSCLK*u32DLYUnit/128ul);
 163   1          TIMER2CT &= 0xFFFF;
 164   1          RH3 = HIBYTE(TIMER2CT);
C51 COMPILER V9.60.7.0   TIMER                                                             04/09/2025 15:05:59 PAGE 4   

 165   1          RL3 = LOBYTE(TIMER2CT);
 166   1          clr_T3CON_TF3;
 167   1          set_T3CON_TR3;                                    /* Trigger Timer3  */
 168   1          ENABLE_TIMER3_INTERRUPT;
 169   1      }
 170          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    449    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      20
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     20    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
